name: aws-terraform-deploy-staging

on:
  push:
    branches:
      - staging

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Package source code to deployment
        run: zip -r application.zip src/ 

      - name: Upload ZIP file
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: application.zip

  setup-infra:
    runs-on: ubuntu-latest
    outputs:
      s3-bucket-url: ${{ steps.s3-url.outputs.s3-bucket-url }}

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform -chdir=./staging init

      - name: Terraform Format
        id: fmt
        run: terraform -chdir=./staging fmt -recursive

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=./staging validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=./staging plan

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=./staging apply -auto-approve

      - name: Retrieve S3 bucket url
        id: s3-url
        run: terraform -chdir=./staging output >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: setup-infra
    env:
      S3_BUCKET_URL: ${{ needs.setup-infra.outputs.s3-bucket-url }}
      S3_BUCKET_NAME: ${{ needs.setup-infra.outputs.s3-bucket-name }}
      S3_BUCKET_OBJECT_NAME: ${{ needs.setup-infra.outputs.s3-bucket-object-name }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Upload package to S3 bucket
        run: aws s3 cp application.zip $S3_BUCKET_URL

      - name: Create ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name simple-webapp \
          --source-bundle S3Bucket=S3_BUCKET_NAME, S3Key="$S3_BUCKET_OBJECT_NAME/application.zip" \
          --version-label "ver-${{ github.sha }}" \

      - name: Deploy ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name staging-env --version-label "ver-${{ github.sha }}"